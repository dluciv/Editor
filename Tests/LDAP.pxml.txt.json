{"Benchmarks": [{"name": "1", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 ldap_sync_intermediate_f", "group_ids": [{"name2": "In case of LDAP_SYNC_CAPI_PRESENTS, the \"present\" phase is being\u2029entered; this means that the following sequence of results will consist in entries in \"present\" sync state", "id_dupl": 1, "position": [973012, 973183]}, {"name2": "In case of LDAP_SYNC_CAPI_DELETES,  the  \"deletes\"  phase  is\u2029being  entered;  this  means that the following sequence of results will consist in entries in \"delete\" sync state.", "id_dupl": 2, "position": [973186, 973363]}]}, {"name": "2", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 \u043f\u0430\u043a\u0435\u0442\u0430 ldap,( \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \"a list of OIDs\" \u0438 \u044f\u0432\u043b\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438).\n", "group_ids": [{"name2": "Return the supported controls advertised by the server as a list of OIDs. Only valid in a bound state.  This is currently experimental and subject to change.", "id_dupl": 3, "position": [365605, 365762]}, {"name2": "Returns the supported LDAP extensions as list of OIDs. Only valid in a bound state.  This is currently experimental and subject to change.", "id_dupl": 4, "position": [365799, 365937]}]}, {"name": "3", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 ::ldap::connect \u0438 ::ldap::secure_connect  \u043f\u0430\u043a\u0435\u0442\u0430 ldap\n", "group_ids": [{"name2": "Opens a LDAPv3 connection to the specified host, at the given port, and returns a token for the connection. This token is the handle argument for all other  commands.  If\u2029no port is specified it will default to 389.\u2029\u2029The command blocks until the connection has been established, or establishment definitely failed.", "id_dupl": 5, "position": [354212, 354526]}, {"name2": "Like  ::ldap::connect, except that the created connection is secured by SSL. The port defaults to 636.  This command depends on the availability of the package TLS, which\u2029is a SSL binding for Tcl. If TLS is not available, then this command will fail.\u2029\u2029The command blocks until the connection has been established, or establishment definitely failed.", "id_dupl": 6, "position": [354563, 354912]}]}, {"name": "4", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 referralsp \u0438 serverctrlsp \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 result message \u043f\u0430\u043a\u0435\u0442\u0430 LDAP_PARSE_RESULT\n", "group_ids": [{"name2": "The referralsp parameter will be filled in with an allocated array of referral strings from the parsed message. This array should be freed using ldap_memvfree(3).  If no  refer\u2010\u2029rals were returned, *referralsp is set to NULL.", "id_dupl": 7, "position": [756240, 756465]}, {"name2": "The  serverctrlsp  parameter  will be filled in with an allocated array of controls copied from the parsed message. The array should be freed using ldap_controls_free(3).  If no\u2029controls were returned, *serverctrlsp is set to NULL.", "id_dupl": 8, "position": [756467, 756698]}]}, {"name": "5", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 referralsp \u0438 serverctrlsp \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 result message \u043f\u0430\u043a\u0435\u0442\u0430 LDAP_PARSE_REFERENCE\n", "group_ids": [{"name2": "The referralsp parameter will be filled in with an allocated array of character strings. The strings are copies of the referrals contained  in  the  parsed  message.  The  array\u2029should be freed by calling ldap_value_free(3).  If referralsp is NULL, no referrals are returned.  If no referrals were returned, *referralsp is set to NULL", "id_dupl": 9, "position": [759182, 759516]}, {"name2": "The  serverctrlsp parameter will be filled in with an allocated array of controls copied from the parsed message. The array should be freed by calling ldap_controls_free(3).  If\u2029serverctrlsp is NULL, no controls are returned.  If no controls were returned, *serverctrlsp is set to NULL.", "id_dupl": 10, "position": [759519, 759805]}]}, {"name": "6", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 referralsp \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 result message \u043f\u0430\u043a\u0435\u0442\u043e\u0432 LDAP_PARSE_RESULT \u0438 LDAP_PARSE_REFERENCE\n", "group_ids": [{"name2": "The referralsp parameter will be filled in with an allocated array of referral strings from the parsed message. This array should be freed using ldap_memvfree(3).  If no  refer\u2010\u2029rals were returned, *referralsp is set to NULL.", "id_dupl": 11, "position": [756240, 756465]}, {"name2": "The referralsp parameter will be filled in with an allocated array of character strings. The strings are copies of the referrals contained  in  the  parsed  message.  The  array\u2029should be freed by calling ldap_value_free(3).  If referralsp is NULL, no referrals are returned.  If no referrals were returned, *referralsp is set to NULL.", "id_dupl": 12, "position": [759182, 759517]}]}, {"name": "7", "annotation": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 serverctrlsp \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 result message \u043f\u0430\u043a\u0435\u0442\u043e\u0432 LDAP_PARSE_RESULT \u0438 LDAP_PARSE_REFERENCE\n", "group_ids": [{"name2": "The  serverctrlsp  parameter  will be filled in with an allocated array of controls copied from the parsed message. The array should be freed using ldap_controls_free(3).  If no\u2029controls were returned, *serverctrlsp is set to NULL.", "id_dupl": 13, "position": [756467, 756698]}, {"name2": "The  serverctrlsp parameter will be filled in with an allocated array of controls copied from the parsed message. The array should be freed by calling ldap_controls_free(3).  If\u2029serverctrlsp is NULL, no controls are returned.  If no controls were returned, *serverctrlsp is set to NULL.", "id_dupl": 14, "position": [759519, 759805]}]}]}